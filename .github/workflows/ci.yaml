# .github/workflows/ci.yaml
name: Build, Push Docker & Update Helm Repo

# Controls when the workflow will run
on:
  push:
    branches: [ master ] # Trigger on pushes to the master branch
  workflow_dispatch: # Allow manual triggering

jobs:
  build-push-docker-helm:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    permissions:
      contents: write # Needed to commit to gh-pages branch
      packages: write # Needed to push packages to GHCR

    steps:
      # --- Step 1: Checkout Code ---
      - name: Checkout master branch code
        uses: actions/checkout@v4
        with:
          ref: master # Ensure we are checking out the main branch

      # --- Step 2: Set up Buildx for Docker ---
      # Needed for more advanced build features, good practice
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Step 3: Log in to GitHub Container Registry ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # Use the repo owner's username
          password: ${{ secrets.GH_PAT }} # Use the PAT stored as a secret

      # --- Step 4: Build and Push Docker Image ---
      - name: Get commit SHA short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Note: Convert repository owner to lowercase to meet Docker naming standards
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the repo root
          file: ./Dockerfile # Path to your Dockerfile
          push: true # Push the image after building
          tags: ghcr.io/${{ github.repository_owner.toLowerCase() }}/pacman:${{ steps.vars.outputs.sha_short }} # Tag with ghcr.io/owner_lowercase/pacman:short_sha
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Step 5: Set up Helm ---
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.x # Use Helm 3

      # --- Step 6: Update Chart Version (Optional but Recommended) ---
      # This step assumes you want to use the commit SHA as the appVersion
      # You might want a different versioning strategy (e.g., SemVer)
      - name: Update Chart.yaml appVersion
        run: |
          # Use yq (pre-installed on runner) to update appVersion in Chart.yaml
          # Adjust path if your chart is not in ./helm/pacman-chart
          yq e '.appVersion = "${{ steps.vars.outputs.sha_short }}"' -i ./helm/pacman-chart/Chart.yaml
          # Optional: Increment chart version here if desired using yq or sed

      # --- Step 7: Package Helm Chart ---
      - name: Package Helm chart
        run: helm package ./helm/pacman-chart # Adjust path if needed

      # --- Step 8: Checkout gh-pages branch ---
      # Check out the gh-pages branch into a separate directory
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages # Checkout to a specific directory

      # --- Step 9: Update Helm Repo Index ---
      # Move the packaged chart and update the index within the gh-pages checkout
      - name: Update Helm repo index
        run: |
          # Move the new chart package into the gh-pages checkout directory
          mv pacman-chart-*.tgz ./gh-pages/

          # Navigate into the gh-pages directory
          cd ./gh-pages

          # Update the index.yaml file using dynamic variables
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ --merge index.yaml

      # --- Step 10: Commit and Push to gh-pages ---
      - name: Commit and push updated Helm repo
        run: |
          cd ./gh-pages
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add . # Stage all changes (new .tgz and updated index.yaml)
          # Commit only if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Update Helm chart for commit ${{ steps.vars.outputs.sha_short }}"
            git push origin gh-pages
          else
            echo "No changes to commit to Helm repo."
          fi
